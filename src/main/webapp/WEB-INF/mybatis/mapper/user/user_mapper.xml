<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="user_mapper">

	<select id="findLoginUser" parameterType="User" resultType="User">
		SELECT account_no, member_no, email, pw, name, nickname, tel, TO_CHAR(birth, 'YYMMDD') birth, gender_id, created_at, icon_id 
		FROM member WHERE email=#{email} and pw=#{pw}
	</select>
	
	<select id="findUserByMemberInfo" parameterType="map" resultType="User">
		SELECT account_no, member_no, email, pw, name, nickname, tel, TO_CHAR(birth, 'YYMMDD') birth, gender_id, created_at, icon_id
		FROM member
		WHERE account_no = #{accountNo} and member_no = #{memberNo}
	</select>
	
	<select id="findUserListByAccountNo" parameterType="int" resultType="User">
		SELECT account_no, member_no, email, pw, name, nickname, tel, TO_CHAR(birth, 'YYMMDD') birth, gender_id, created_at, icon_id 
		FROM member
		WHERE account_no = #{accountNo}
		ORDER BY member_no
	</select>

	<select id="findUserList" resultType="User">
		SELECT account_no, member_no, email, pw, name, nickname, tel, TO_CHAR(birth, 'YYMMDD') birth, gender_id, created_at, icon_id 
		FROM member
	</select>
	
	<select id="findUserByEmail" resultType="User" parameterType="String">
		SELECT account_no, member_no, email, pw, name, nickname, tel, TO_CHAR(birth, 'YYMMDD') birth, gender_id, created_at, icon_id 
		FROM member
		WHERE email = #{email}
	</select>
	
	<update id="modifyUser"  parameterType="User">
		UPDATE member
		SET pw = #{pw},
			name = #{name},
			nickname = #{nickname},
			tel = #{tel},
			birth = #{birth},
			gender_id = #{genderId},
			icon_id = #{iconId}
		WHERE account_no = #{accountNo} and member_no = #{memberNo}
	</update>
	
	<insert id="saveUser" parameterType="User">
		INSERT INTO member
		VALUES ( account_no_seq.nextval, 1, #{email}, #{pw}, #{name}, #{nickname}, #{tel}, #{birth}, #{genderId}, 1, SYSDATE )
	</insert>
	
	<insert id="addProfile" parameterType="User">
		INSERT INTO member
		VALUES ( #{accountNo}, (SELECT NVL(MAX(member_no), 1) + 1 FROM member WHERE account_no = #{accountNo}), NULL, NULL, NULL, #{nickname}, NULL, #{birth}, #{genderId}, #{iconId},  NULL )
	</insert>
	
	<select id="getMemberCountByAccountNo" resultType="int" parameterType="int">
        SELECT count(*) 
		FROM member
		WHERE account_no = #{accountNo}
    </select>
	
	<select id="getAgeByMemberInfo" parameterType="map" resultType="int">
        SELECT CEIL(MONTHS_BETWEEN(SYSDATE, birth) / 12) AS age
        FROM member
        WHERE account_no = #{accountNo} and member_no = #{memberNo}
    </select>
    
    <select id="getGenderNameByGenderId" parameterType="int" resultType="String">
        SELECT gender_name
		FROM gender
		WHERE gender_id = #{genderId}
    </select>
    
     <select id="getEmailCountByEmail" parameterType="String" resultType="int">
        SELECT COUNT(*)
		  FROM member
		 WHERE email = #{email}
    </select>
    
    <select id="getNutritionStandardByMemberInfo" parameterType="Map" resultType="NutritionStandard">
    	SELECT *
		FROM nutrition_standard
		WHERE (SELECT CEIL(MONTHS_BETWEEN(SYSDATE, birth)) 
				        FROM member
				        WHERE account_no = #{accountNo} AND member_no = #{memberNo}) 
		BETWEEN age_min AND age_max
		AND gender_id = (SELECT gender_id FROM member WHERE account_no = #{accountNo} AND member_no = #{memberNo})
		ORDER BY nutrient_id
    </select>
    
    <delete id="removeProfile" parameterType="map">
    	DELETE FROM member
    	WHERE account_no = #{accountNo} AND member_no = #{memberNo}
    </delete>
	
	<select id="findMemberList" parameterType="User" resultType="User">
		SELECT * FROM member WHERE account_no = #{accountNo} and member_no = #{memberNo}
	</select>
	
	
	
</mapper>					


	